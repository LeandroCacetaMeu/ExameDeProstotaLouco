import tkinter as tk
from tkinter import *
from tkinter import messagebox
import tkinter.ttk
import PIL
import os
import time
import serial
from PIL import Image, ImageTk
import urllib
import webbrowser
import urllib.request
from tkinter.ttk import Label
import random
from pytube import YouTube
from random import shuffle
import json
import pynput
import sys


# Configurar a porta serial. Verifique a porta serial correta em sua configuração do Arduino.
arduino_port = 'COM4'  # Substitua pela porta correta
arduino_baud = 9600
ser = serial.Serial(arduino_port, arduino_baud, timeout=1)

#Envia o estado do led para o arduino
def send_command(command):
    ser.write(command.encode())
    time.sleep(0.1)


## Função do gameover, somente chamada quando o jogador perde todas as vidas.
## Neste caso, o jogador é obrigado a fechar o programa.

def disable_event():
    pass


def gameover():
    top = Toplevel()
    top.destroy()
    gameoverwindow = tk.Tk()
    gameoverwindow.title('GAME OVER')
    gameoverwindow.geometry('400x300')
    gameoverwindow.configure(background="#111111")

    textgameover = Label(gameoverwindow, text='GAME OVER, o jogo acabou!', background="#111111",
                         foreground='white',
                         font=('Bebas Neue', 15)
                         )
    exitbutton = tk.Button(gameoverwindow, text='Encerrar', background='#111111',
                           foreground='white',
                           font=('Bebas Neue', 15),
                           command=sys.exit)

    textgameover.pack()
    exitbutton.pack()
    gameoverwindow.mainloop()


## Devidos créditos a equipe de propaganda:

def creditosperguntas():
    global creditos_perguntas
    creditos_perguntas = tk.Tk()
    creditos_perguntas.title('Créditos das perguntas')
    creditos_perguntas.geometry('1366x768')
    creditos_perguntas.configure(background='#111111')
    textocreditos = Label(creditos_perguntas,
                          text='Equipe responsável pela criação das perguntas:',
                          background='#111111',
                          foreground='white',
                          font=('Bebas Neue', 16)
                          )
    textocreditos.pack()
    textocreditos1 = Label(creditos_perguntas,
                           text='Vitórias, Patrine, Rafael, Maisa, Pedro, Arthur, Sarah',
                           background='#111111',
                           foreground='white',
                           font=('Bebas Neue', 16)
                           )
    textocreditos1.pack()
    botaoproxcred = tk.Button(creditos_perguntas, text='Próxima equipe', command=creditospropaganda,
                              background='#111111',
                              foreground='white',
                              font=('Bebas Neue', 16)
                              )
    creditos_perguntas.after(15000, creditos_perguntas.destroy)
    botaoproxcred.pack()


## Devidos créditos a equipe das imagens:

def creditosimagens():
    global creditos_imagens
    creditos_imagens = tk.Tk()
    creditos_imagens.title('Créditos das imagens')
    creditos_imagens.geometry('1366x768')
    creditos_imagens.configure(background='#111111')
    textocreditos = Label(creditos_imagens, text='Equipe das imagens:',
                          background='#111111',
                          foreground='white',
                          font=('Bebas Neue', 16)
                          )
    textocreditos.pack()
    textocreditos1 = Label(creditos_imagens, text='Juliana, Yasmim, Matheus, Nicolas, Miguel',
                           background='#111111',
                           foreground='white',
                           font=('Bebas Neue', 16)
                           )
    textocreditos1.pack()
    botaoproxcred = tk.Button(creditos_imagens, text='Próxima equipe', command=creditosperguntas,
                              background='#111111',
                              foreground='white',
                              font=('Bebas Neue', 16)
                              )
    creditos_imagens.after(15000, creditos_imagens.destroy)
    botaoproxcred.pack()


## Devidos créditos a equipe de programação:

def creditosprogramadores():
    global creditos_programadores
    creditos_programadores = tk.Tk()
    creditos_programadores.title('Equipe responsável pela modelagem e criação do código para o programa.')
    creditos_programadores.geometry('1366x768')
    creditos_programadores.configure(background='#111111')
    textocreditos = Label(creditos_programadores,
                          text='Equipe de programação:',
                          background='#111111',
                          foreground='white',
                          font=('Bebas Neue', 16)
                          )
    textocreditos.pack()
    textocreditos1 = Label(creditos_programadores,
                           text='Enzo Fernandes, Kleber, Gabryel, Leandro',
                           background='#111111',
                           foreground='white',
                           font=('Bebas Neue', 16)
                           )
    textocreditos1.pack()
    textocreditos2 = Label(creditos_programadores,
                           text='Paulo, Everson, Erbson, Larissa',
                           background='#111111',
                           foreground='white',
                           font=('Bebas Neue', 16)
                           )
    textocreditos2.pack()
    botaoproxcred = tk.Button(creditos_programadores, text='Próxima equipe', command=creditosimagens,
                              background='#111111',
                              foreground='white',
                              font=('Bebas Neue', 16),
                              )
    creditos_programadores.after(15000, creditos_programadores.destroy)
    botaoproxcred.pack()


## Devidos créditos a equipe de propaganda:

def creditospropaganda():
    global creditos_propaganda
    creditos_propaganda = tk.Tk()
    creditos_propaganda.title('Créditos')
    creditos_propaganda.geometry('1366x768')
    creditos_propaganda.configure(background='#111111')
    textocreditos = Label(creditos_propaganda, text='Equipe responsável pela propaganda da feira:',
                          background='#111111',
                          foreground='white',
                          font=('Bebas Neue', 16)
                          )
    textocreditos.pack()
    textocreditos1 = Label(creditos_propaganda, text='Diogo, Gabriel, Aryane, Marjollyn, Gustavo',
                           background='#111111',
                           foreground='white',
                           font=('Bebas Neue', 16)
                           )
    textocreditos1.pack()
    textocreditos2 = Label(creditos_propaganda, text='Abilio, Klaiver, Geovanna, Thaina, Julia',
                           background='#111111',
                           foreground='white',
                           font=('Bebas Neue', 16)
                           )
    textocreditos2.pack()
    textofinal = Label(creditos_propaganda, text='Aguarde 15 segundos para as janelas fecharem.',
                       background='#111111',
                       foreground='white',
                       font=('Bebas Neue', 16)
                       )
    creditos_propaganda.after(15000, creditos_propaganda.destroy)
    textofinal.pack()


## Definição da classe Jogador:

class Jogador:
    def __init__(self, nome, pontos, vidas):
        self.nome = nome
        self.pontos = pontos
        self.vidas = vidas


## Definição repetida para Ver Pontuação:

def scoreboard():
    def erasetext():
        maintext.delete('1.0', END)

    def alphabeticorder():
        datalist = data.items()
        sorteddatalist = sorted(datalist)
        maintext.tag_configure("center", justify='center')
        for item in sorteddatalist:
            maintext.insert(tk.END, (str(item) + '\n'), "center")
        maintext.pack()

    def highestvalueorder():
        datalist = data.items()
        numbersorteddatalist = sorted(datalist, key=lambda x: x[1], reverse=True)
        maintext.tag_configure("center", justify='center')
        for item in numbersorteddatalist:
            maintext.insert(tk.END, (str(item) + '\n'), "center")
        maintext.pack()

    def lowestvalueorder():
        datalist = data.items()
        numbersorteddatalist = sorted(datalist, key=lambda x: x[1])
        maintext.tag_configure("center", justify='center')
        for item in numbersorteddatalist:
            maintext.insert(tk.END, (str(item) + '\n'), "center")
        maintext.pack()

    with open('playerdata.json', 'r') as file:
        data = json.load(file)

        ## Função utilizada para desligar o teclado enquanto se vê o placar de pontuação,
        ## para evitar fraudes.

        keyboarddisable = pynput.keyboard.Listener(suppress=True)
        keyboarddisable.start()

        scorewindow = tk.Tk()
        scorewindow.geometry('1366x768')
        scorewindow.title('SCOREBOARD')
        scorewindow.configure(background="#111111")
        scrollbar = tk.Scrollbar(scorewindow)
        scrollbar.pack(side=RIGHT, fill=Y)
        maintext = tk.Text(scorewindow, width=1366, height=768, bg="#111111", fg='white', font=('Bebas Neue', 15),
                           yscrollcommand=scrollbar.set)
        maintext.tag_configure("center", justify='center')
        for item in data.items():
            maintext.insert(tk.END, str(item) + '\n', "center")

        alphabeticorderbutton = tk.Button(scorewindow, text='Ordem alfabética', background="#111111",
                                          foreground='white', font=('Bebas Neue', 15),
                                          command=lambda: [erasetext(), alphabeticorder()])
        highestvaluebutton = tk.Button(scorewindow, text='Ordem decrescente', background='#111111',
                                       foreground='white', font=('Bebas Neue', 15),
                                       command=lambda: [erasetext(), highestvalueorder()])
        lowestvaluebutton = tk.Button(scorewindow, text='Ordem crescente', background="#111111",
                                      foreground='white', font=('Bebas Neue', 15),
                                      command=lambda: [erasetext(), lowestvalueorder()])

        maintext.pack()
        alphabeticorderbutton.pack()
        highestvaluebutton.pack()
        lowestvaluebutton.pack()
        alphabeticorderbutton.place(x=1000, y=50)
        highestvaluebutton.place(x=1000, y=100)
        lowestvaluebutton.place(x=1000, y=150)
        scrollbar.config(command=maintext.yview)
        scorewindow.mainloop()


## Janela principal:

janela_principal = tk.Tk()
janela_principal.title('Geometrix Menu')
janela_principal.geometry('1366x768')
urlimagem = urllib.request.urlopen('https://i.postimg.cc/3RD94Fc1/logo.png')
img = ImageTk.PhotoImage(file=urlimagem, master=janela_principal)
imagemtitulo = Label(janela_principal, image=img)

botaocreditos = tk.Button(janela_principal,
                          text='Ver créditos',
                          background='#111111',
                          foreground='white',
                          font=('Bebas Neue', 17),
                          command=creditosprogramadores, bd=5)
botaoinicio = tk.Button(janela_principal,
                        text='Clique para iniciar!',
                        background="#111111",
                        foreground="white",
                        font=("Bebas Neue", 17),
                        command=janela_principal.destroy, bd=5)
botaopontuacao = tk.Button(janela_principal, text='Abrir Pontuação',
                           background="#111111",
                           foreground="white",
                           font=("Bebas Neue", 17),
                           command=scoreboard, bd=5)
botaoencerrar = tk.Button(janela_principal, text='Clique para encerrar o Geometrix!',
                          background="#111111",
                          foreground="white",
                          font=("Bebas Neue", 17),
                          command=sys.exit, bd=5)
textointro = Label(janela_principal, text='Bem vindo ao Projeto da Feira de Matemática: Geometrix!',
                   background="#111111",
                   foreground="white",
                   font=("Bebas Neue", 17))
textosubintro = Label(janela_principal, text='Um projeto realizado pela turma do 3°B!',
                      background="#111111",
                      foreground="white",
                      font=("Bebas Neue", 17))
imagemtitulo.pack(pady=10)
textointro.pack(pady=5)
textosubintro.pack(pady=5)
botaoinicio.pack(pady=25)
botaocreditos.pack(pady=5, side="left")
botaocreditos.place(x=465, y=508)
botaopontuacao.pack(pady=5, side="right")
botaopontuacao.place(x=788, y=508)
botaoencerrar.pack(pady=8)
janela_principal.configure(bg='#111111')
janela_principal.mainloop()


## Seção das regras do jogo:

def textconfirmation():
    textoconfirmacao = confirmentry.get()
    if textoconfirmacao == "Confirmar" or textoconfirmacao == 'confirmar':
        janelaregra.destroy()
    else:
        errorpopup = tk.Tk()
        errorpopup.title("ERRADO!")
        errorpopup.configure(background='#111111')
        errorlabel = tk.Label(errorpopup, text='Por favor, digite corretamente o texto requisitado!',
                              background="#111111",
                              foreground='white', font=('Bebas Neue', 15))
        errorlabel.pack()
        errorpopup.mainloop()


janelaregra = tk.Tk()
janelaregra.title('Regras')
janelaregra.resizable(False, False)
janelaregra.protocol("WM_DELETE_WINDOW", disable_event)
janelaregra.geometry('800x600')
janelaregra.configure(background='#111111')
confirmtext = tk.Label(janelaregra, text='\nDigite "Confirmar" para prosseguir.', background="#111111",
                       foreground='white', font=('Bebas Neue', 15))
confirmentry = tk.Entry(janelaregra, font=('Bebas Neue', 15))
confirmbutton = tk.Button(janelaregra, text='Enter', background="#111111", foreground='white', font=('Bebas Neue', 15),
                          command=textconfirmation)
aviso = Label(janelaregra, text='LEIA ATENTAMENTE AS REGRAS!', background='#111111', foreground='white',
              font=('Bebas Neue', 20))

textoregras = Label(janelaregra, text='''Aqui vai algumas regras antes de iniciar o jogo!
\n 1) Ao inserir o seu nome, certifique-se de inserir um nome legível,
      para evitar possíveis confusões no placar de pontuação.
\n 2) Ao se deparar com perguntas em que exigem uma resposta escrita do usuário,
      por favor escreva respeitando as normas da língua portuguesa, isto é, respeitando
      acentuações gráficas e os sinais de pontuação!''', background="#111111", foreground='white',
                    font=('Bebas Neue', 16))

aviso.pack()
textoregras.pack()
confirmtext.pack()
confirmentry.pack()
confirmbutton.pack()
janelaregra.mainloop()


## Função para coletar o nome do jogador e definir o objeto jogador da classe Jogador:
def nameentry():
    global nomejogador  # Definição de uma varíavel global para evitar problemas de referência
    nomejogador = nomeentry.get()  # Recolhe o nome que o usuário digitou na caixa de entrada
    janelanome.destroy()


janelanome = tk.Tk()
janelanome.geometry('400x300')
janelanome.title('Coloque o seu nome!')
janelanome.resizable(False, False)
janelanome.protocol("WM_DELETE_WINDOW", disable_event)
janelanome.configure(background='#111111')

textonome = Label(janelanome, text='Insira seu nome:', background='#111111',
                  foreground='white',
                  font=('Bebas Neue', 15)
                  )
nomeentry = Entry(janelanome, font=('Bebas Neue', 12))
entername = tk.Button(janelanome, text='ENTER', background="#111111",
                      foreground="white",
                      font=('Bebas Neue', 15),
                      command=nameentry)
textonome.pack()
nomeentry.pack()
entername.pack()
janelanome.mainloop()

# Definição do objeto jogador da classe Jogador
# Além de informações iniciais do jogador, como: nome,pontos e vidas.

jogador = Jogador(nomejogador, 0, 3)
infojogador = {}

## Definição das questões:
lista = [1,2,3,4]
shuffle(lista)
ultimoitem = lista[-1]
print(lista)

## Função do vídeo.

def play_youtubevideo_from_browser():

    video_url = 'https://www.youtube.com/watch?v=B07mDSQE_jg'

    yt = YouTube(video_url)

    video_title = yt.title

    webbrowser.open(video_url)

def destroy_qvideo():
    time.sleep(5)
    qvideo.destroy()

qvideo = tk.Tk()
qvideo.geometry('400x300')
qvideo.title('Gostaria de ver um vídeo explicativo?')
qvideo.configure(background='#111111')

questionlabel = Label(qvideo,text='Você quer assistir um vídeo explicativo \n acerca das transformações geométricas?',
                      background="#111111",foreground='white',font=('Bebas Neue',15))
yesbutton = Button(qvideo,text='SIM',background='#111111',foreground='white',font=('Bebas Neue',12),command=lambda:[play_youtubevideo_from_browser(),destroy_qvideo()])
nobutton = Button(qvideo,text='NÃO',background='#111111',foreground='white',font=('Bebas Neue',12),command=qvideo.destroy)

questionlabel.pack()
yesbutton.pack()
nobutton.pack()

qvideo.mainloop()


for questao in lista:
    if questao == 1:

        # Parte reservada aos comentários


        def perguntaacerto1():

	        send_command('C') 

            jogador.pontos = jogador.pontos + 100

            if questao == ultimoitem:
                janelaultima.destroy()
            elif questao == 1:
                janela1.destroy()


        def correcao():

            janelaerro1.destroy()
            janelacorrecao = tk.Tk()
            janelacorrecao.title('Correção')
            janelacorrecao.geometry('430x600')
            janelacorrecao.resizable(False, False)
            janelacorrecao.configure(background='#111111')
            urlimagemcorrecao = urllib.request.urlopen(
                'https://i.postimg.cc/MKC1wdJm/corre-reflex-o-redimensionada.png')
            imgcorrecao = ImageTk.PhotoImage(file=urlimagemcorrecao, master=janelacorrecao)
            imagemcorrecao = Label(janelacorrecao, image=imgcorrecao)
            imagemcorrecao.pack()
            janelacorrecao.mainloop()


        def perguntaerrada1():

	        send_command('W')

            jogador.vidas = jogador.vidas - 1

            if jogador.vidas == 0:
                if questao == ultimoitem:
                    janelaultima.destroy()
                elif questao == 1:
                    janela1.destroy()
                gameover()
            else:
                pass

            if jogador.pontos == 0:
                pass
            else:
                jogador.pontos = jogador.pontos - 100

            if questao == ultimoitem:
                janelaultima.destroy()
            elif questao == 1:
                janela1.destroy()

            global janelaerro1
            janelaerro1 = tk.Tk()
            janelaerro1.title('Você errou!')
            janelaerro1.geometry('200x200')
            janelaerro1.configure(background='#111111')
            textoerro = Label(janelaerro1, text='Sinto muito, você errou!',
                              background='#111111',
                              foreground='white',
                              font=('Bebas Neue', 12))
            button = tk.Button(janelaerro1, text='Saiba o porquê.', command=correcao,
                               background='#111111',
                               foreground='white',
                               font=('Bebas Neue', 12))
            textoerro.pack()
            button.pack()
            janelaerro1.mainloop()


        if questao == ultimoitem:
            janelaultima = tk.Tk()
            janelaultima.geometry('1366x768')
            janelaultima.title('Última questao')
            janelaultima.configure(background='#111111')
            textoquestaoultima = Label(janelaultima, text='A figura que corresponde a uma reflexão axial:',
                                       background='#111111',
                                       foreground='white',
                                       font=('Bebas Neue', 20)
                                       )
            urlimagem = urllib.request.urlopen('https://i.postimg.cc/wjXDFLRx/imagem-questao1.png')
            img = ImageTk.PhotoImage(file=urlimagem, master=janelaultima)
            imagem = Button(janelaultima, image=img)
            imagem.configure(background='purple', border='7')
            imagem.pack(pady=23)
            textoquestaoultima.pack()

            button_1_1 = tk.Button(janelaultima, text='A) É a figura 3.', command=perguntaerrada1,
                                   background='purple',
                                   foreground='white',
                                   font=('Bebas Neue', 16),
                                   border='7'
                                   )
            button_1 = tk.Button(janelaultima, text='A) É a figura 3.', command=perguntaerrada1,
                                 background='#111111',
                                 foreground='white',
                                 font=('Bebas Neue', 16)
                                 )
            button_2_1 = tk.Button(janelaultima, text='B) É a figura 1.', command=perguntaerrada1,
                                   background='purple',
                                   foreground='white',
                                   font=('Bebas Neue', 16),
                                   border='7'
                                   )
            button_2 = tk.Button(janelaultima, text='B) É a figura 1.', command=perguntaerrada1,
                                 background='#111111',
                                 foreground='white',
                                 font=('Bebas Neue', 16)
                                 )
            button_3_1 = tk.Button(janelaultima, text='C) É a figura 4.', command=perguntaerrada1,
                                   background='purple',
                                   foreground='white',
                                   font=('Bebas Neue', 16),
                                   border='7'
                                   )
            button_3 = tk.Button(janelaultima, text='C) É a figura 4.', command=perguntaerrada1,
                                 background='#111111',
                                 foreground='white',
                                 font=('Bebas Neue', 16)
                                 )
            button_4_1 = tk.Button(janelaultima, text='D) É a figura 2.', command=perguntaacerto1,
                                   background='purple',
                                   foreground='white',
                                   font=('Bebas Neue', 16),
                                   border='7'
                                   )
            button_4 = tk.Button(janelaultima, text='D) É a figura 2.', command=perguntaacerto1,
                                 background='#111111',
                                 foreground='white',
                                 font=('Bebas Neue', 16)
                                 )
            button_1_1.pack()
            button_1_1.place(x=50, y=600)
            button_1.pack()
            button_1.place(x=54, y=604)
            button_2_1.pack()
            button_2_1.place(x=220, y=600)
            button_2.pack()
            button_2.place(x=224, y=604)
            button_3_1.pack()
            button_3_1.place(x=1020, y=600)
            button_3.pack()
            button_3.place(x=1024, y=604)
            button_4_1.pack()
            button_4_1.place(x=1190, y=600)
            button_4.pack()
            button_4.place(x=1194, y=604)
            janelaultima.mainloop()

        else:
            janela1 = tk.Tk()
            janela1.title('Pergunta 1')
            janela1.geometry('1366x768')
            janela1.configure(background='#111111')
            urlimagem_1 = urllib.request.urlopen('https://i.postimg.cc/wjXDFLRx/imagem-questao1.png')
            img_1 = ImageTk.PhotoImage(file=urlimagem_1, master=janela1)
            imagem_1 = Button(janela1, image=img_1)
            imagem_1.configure(background='purple', border='7')
            textoquestao = Label(janela1, text='A figura que corresponde a uma reflexão axial:',
                                 background='#111111',
                                 foreground='white',
                                 font=('Bebas Neue', 20)
                                 )
            imagem_1.pack(pady=23)
            textoquestao.pack()

            button_1_1 = tk.Button(janela1, text='A) É a figura 3.', command=perguntaerrada1,
                                   background='purple',
                                   foreground='white',
                                   font=('Bebas Neue', 16),
                                   border='7'
                                   )
            button_1 = tk.Button(janela1, text='A) É a figura 3.', command=perguntaerrada1,
                                 background='#111111',
                                 foreground='white',
                                 font=('Bebas Neue', 16)
                                 )
            button_2_1 = tk.Button(janela1, text='B) É a figura 1.', command=perguntaerrada1,
                                   background='purple',
                                   foreground='white',
                                   font=('Bebas Neue', 16),
                                   border='7'
                                   )
            button_2 = tk.Button(janela1, text='B) É a figura 1.', command=perguntaerrada1,
                                 background='#111111',
                                 foreground='white',
                                 font=('Bebas Neue', 16)
                                 )
            button_3_1 = tk.Button(janela1, text='C) É a figura 4.', command=perguntaerrada1,
                                   background='purple',
                                   foreground='white',
                                   font=('Bebas Neue', 16),
                                   border='7'
                                   )
            button_3 = tk.Button(janela1, text='C) É a figura 4.', command=perguntaerrada1,
                                 background='#111111',
                                 foreground='white',
                                 font=('Bebas Neue', 16)
                                 )
            button_4_1 = tk.Button(janela1, text='D) É a figura 2.', command=perguntaacerto1,
                                   background='purple',
                                   foreground='white',
                                   font=('Bebas Neue', 16),
                                   border='7'
                                   )
            button_4 = tk.Button(janela1, text='D) É a figura 2.', command=perguntaacerto1,
                                 background='#111111',
                                 foreground='white',
                                 font=('Bebas Neue', 16)
                                 )
            button_1_1.pack()
            button_1_1.place(x=50, y=600)
            button_1.pack()
            button_1.place(x=54, y=604)
            button_2_1.pack()
            button_2_1.place(x=220, y=600)
            button_2.pack()
            button_2.place(x=224, y=604)
            button_3_1.pack()
            button_3_1.place(x=1020, y=600)
            button_3.pack()
            button_3.place(x=1024, y=604)
            button_4_1.pack()
            button_4_1.place(x=1190, y=600)
            button_4.pack()
            button_4.place(x=1194, y=604)
            janela1.mainloop()

    if questao == 2:

        def perguntaacerto2():

	        send_command('C')

            jogador.pontos = jogador.pontos + 100

            if questao == ultimoitem:
                janelaultima.destroy()
            elif questao == 2:
                janela2.destroy()


        def correcao():

            janelaerro2.destroy()
            janelacorrecao = tk.Tk()
            janelacorrecao2 = tk.Tk()
            janelacorrecao.title('Correção 1')
            janelacorrecao2.title('Correção 2')
            janelacorrecao.geometry('430x600')
            janelacorrecao2.geometry('430x600')
            janelacorrecao.resizable(False, False)
            janelacorrecao2.resizable(False, False)
            janelacorrecao.configure(background='#111111')
            janelacorrecao2.configure(background='#111111')
            urlimagemcorrecao1 = urllib.request.urlopen('https://i.postimg.cc/52Gt796y/corre-rota-o-redimensionada.png')
            urlimagemcorrecao2 = urllib.request.urlopen(
                'https://i.postimg.cc/MKC1wdJm/corre-reflex-o-redimensionada.png')
            imgcorrecao1 = ImageTk.PhotoImage(file=urlimagemcorrecao1, master=janelacorrecao)
            imgcorrecao2 = ImageTk.PhotoImage(file=urlimagemcorrecao2, master=janelacorrecao2)
            imagemcorrecao1 = Label(janelacorrecao, image=imgcorrecao1)
            imagemcorrecao2 = Label(janelacorrecao2, image=imgcorrecao2)
            imagemcorrecao1.pack()
            imagemcorrecao2.pack()
            janelacorrecao.mainloop()
            janelacorrecao2.mainloop()


        def perguntaerrada2():

            send_command('W')

            jogador.vidas = jogador.vidas - 1

            if jogador.vidas == 0:
                if questao == ultimoitem:
                    janelaultima.destroy()
                elif questao == 1:
                    janela2.destroy()
                gameover()
            else:
                pass

            if jogador.pontos == 0:
                pass
            else:
                jogador.pontos = jogador.pontos - 100

            if questao == ultimoitem:
                janelaultima.destroy()
            elif questao == 2:
                janela2.destroy()

            global janelaerro2
            janelaerro2 = tk.Tk()
            janelaerro2.title('Você errou!')
            janelaerro2.geometry('200x200')
            janelaerro2.configure(background='#111111')
            textoerro = Label(janelaerro2, text='Sinto muito, você errou!',
                              background='#111111',
                              foreground='white',
                              font=('Bebas Neue', 12)
                              )
            button = tk.Button(janelaerro2, text='Saiba o porquê.', command=correcao,
                               background='#111111',
                               foreground='white',
                               font=('Bebas Neue', 12)
                               )
            textoerro.pack()
            button.pack()
            janelaerro2.mainloop()


        if questao == ultimoitem:
            janelaultima = tk.Tk()
            janelaultima.title('Última questão')
            janelaultima.geometry('1366x768')
            janelaultima.configure(background='#111111')

            frame_quest = tk.Frame(master=janelaultima, highlightbackground='red', highlightthickness=8, height=460
                                   , width=610)
            frame_quest.pack(padx=10, pady=10)
            frame_quest.place(x=378, y=15)
            frame1 = tk.Frame(master=janelaultima, highlightbackground="red", highlightthickness=8, height=162
                              , width=262)
            frame1.pack(padx=10, pady=10)
            frame1.place(x=7, y=496)

            frame2 = tk.Frame(master=janelaultima, highlightbackground="red", highlightthickness=8, height=162
                              , width=262)
            frame2.pack(padx=10, pady=10)
            frame2.place(x=297, y=496)

            frame3 = tk.Frame(master=janelaultima, highlightbackground="red", highlightthickness=8, height=162
                              , width=262)
            frame3.pack(padx=10, pady=10)
            frame3.place(x=797, y=496)

            frame4 = tk.Frame(master=janelaultima, highlightbackground="red", highlightthickness=8, height=162
                              , width=262)
            frame4.pack(padx=10, pady=10)
            frame4.place(x=1097, y=496)

            urlimagem_1 = urllib.request.urlopen('https://i.postimg.cc/wvGwyqDY/quest-exer2.png')
            urlalternativa1 = urllib.request.urlopen('https://i.postimg.cc/zDwqCGJ8/ex2-1-red.png')
            urlalternativa2 = urllib.request.urlopen('https://i.postimg.cc/dVGxZLRK/ex2-2-red.png')
            urlalternativa3 = urllib.request.urlopen('https://i.postimg.cc/Vk9KL21f/ex2-3-red.png')
            urlalternativa4 = urllib.request.urlopen('https://i.postimg.cc/W3ynHvmn/ex2-4-red.png')
            img_1 = ImageTk.PhotoImage(file=urlimagem_1, master=janelaultima)
            imgal1 = ImageTk.PhotoImage(file=urlalternativa1, master=janelaultima)
            imgal2 = ImageTk.PhotoImage(file=urlalternativa2, master=janelaultima)
            imgal3 = ImageTk.PhotoImage(file=urlalternativa3, master=janelaultima)
            imgal4 = ImageTk.PhotoImage(file=urlalternativa4, master=janelaultima)
            imagem_1 = Label(janelaultima, image=img_1)
            imagem_1.pack(pady=18)
            button_1 = tk.Button(janelaultima, image=imgal1, command=perguntaerrada2)
            button_2 = tk.Button(janelaultima, image=imgal2, command=perguntaerrada2)
            button_3 = tk.Button(janelaultima, image=imgal3, command=perguntaerrada2)
            button_4 = tk.Button(janelaultima, image=imgal4, command=perguntaacerto2)
            button_1.pack()
            button_1.place(x=10, y=500)
            button_2.pack()
            button_2.place(x=300, y=500)
            button_3.pack()
            button_3.place(x=800, y=500)
            button_4.pack()
            button_4.place(x=1100, y=500)
            janelaultima.mainloop()

        else:
            janela2 = tk.Tk()
            janela2.title('Pergunta 2')
            janela2.geometry('1366x768')
            janela2.configure(background='#111111')

            frame_quest = tk.Frame(master=janela2, highlightbackground='red', highlightthickness=8, height=460
                                   , width=610)
            frame_quest.pack(padx=10, pady=10)
            frame_quest.place(x=378, y=15)
            frame1 = tk.Frame(master=janela2, highlightbackground="red", highlightthickness=8, height=162
                              , width=262)
            frame1.pack(padx=10, pady=10)
            frame1.place(x=7, y=496)

            frame2 = tk.Frame(master=janela2, highlightbackground="red", highlightthickness=8, height=162
                              , width=262)
            frame2.pack(padx=10, pady=10)
            frame2.place(x=297, y=496)

            frame3 = tk.Frame(master=janela2, highlightbackground="red", highlightthickness=8, height=162
                              , width=262)
            frame3.pack(padx=10, pady=10)
            frame3.place(x=797, y=496)

            frame4 = tk.Frame(master=janela2, highlightbackground="red", highlightthickness=8, height=162
                              , width=262)
            frame4.pack(padx=10, pady=10)
            frame4.place(x=1097, y=496)

            urlimagem_1 = urllib.request.urlopen('https://i.postimg.cc/wvGwyqDY/quest-exer2.png')
            urlalternativa1 = urllib.request.urlopen('https://i.postimg.cc/zDwqCGJ8/ex2-1-red.png')
            urlalternativa2 = urllib.request.urlopen('https://i.postimg.cc/dVGxZLRK/ex2-2-red.png')
            urlalternativa3 = urllib.request.urlopen('https://i.postimg.cc/Vk9KL21f/ex2-3-red.png')
            urlalternativa4 = urllib.request.urlopen('https://i.postimg.cc/W3ynHvmn/ex2-4-red.png')
            img_1 = ImageTk.PhotoImage(file=urlimagem_1, master=janela2)
            imgal1 = ImageTk.PhotoImage(file=urlalternativa1, master=janela2)
            imgal2 = ImageTk.PhotoImage(file=urlalternativa2, master=janela2)
            imgal3 = ImageTk.PhotoImage(file=urlalternativa3, master=janela2)
            imgal4 = ImageTk.PhotoImage(file=urlalternativa4, master=janela2)
            imagem_1 = Label(janela2, image=img_1)
            imagem_1.pack(pady=18)
            button_1 = tk.Button(janela2, image=imgal1, command=perguntaerrada2)
            button_2 = tk.Button(janela2, image=imgal2, command=perguntaerrada2)
            button_3 = tk.Button(janela2, image=imgal3, command=perguntaerrada2)
            button_4 = tk.Button(janela2, image=imgal4, command=perguntaacerto2)
            button_1.pack()
            button_1.place(x=10, y=500)
            button_2.pack()
            button_2.place(x=300, y=500)
            button_3.pack()
            button_3.place(x=800, y=500)
            button_4.pack()
            button_4.place(x=1100, y=500)
            janela2.mainloop()

    if questao == 3:

        def perguntaacerto3():

            send_command('C')

            jogador.pontos = jogador.pontos + 100
            if questao == ultimoitem:
                janelaultima.destroy()
            elif questao == 3:
                janela3.destroy()


        def correcao():
            janelaerro3.destroy()
            janelacorrecao = tk.Tk()
            janelacorrecao.title('Correção')
            janelacorrecao.geometry('430x600')
            janelacorrecao.configure(background='#111111')
            janelacorrecao.resizable(False, False)
            urlimagemcorrecao = urllib.request.urlopen('https://i.postimg.cc/52Gt796y/corre-rota-o-redimensionada.png')
            imgcor = ImageTk.PhotoImage(file=urlimagemcorrecao, master=janelacorrecao)
            imgcorrecao = Label(janelacorrecao, img=imgcor)
            imgcorrecao.pack()
            janelacorrecao.mainloop()


        def perguntaerrada3():

	    send_command('W')
	
            jogador.vidas = jogador.vidas - 1

            if jogador.vidas == 0:
                if questao == ultimoitem:
                    janelaultima.destroy()
                elif questao == 1:
                    janela3.destroy()
                gameover()
            else:
                pass

            if jogador.pontos == 0:
                pass
            else:
                jogador.pontos = jogador.pontos - 100

            if questao == ultimoitem:
                janelaultima.destroy()
            elif questao == 3:
                janela3.destroy()

            global janelaerro3
            janelaerro3 = tk.Tk()
            janelaerro3.title('Você errou!')
            janelaerro3.geometry('200x200')
            janelaerro3.configure(background='#111111')
            textoerro = Label(janelaerro3, text='Sinto muito, você errou!',
                              background='#111111',
                              foreground='white',
                              font=('Bebas Neue', 12)
                              )
            button = tk.Button(janelaerro3, text='Saiba o porquê.', command=correcao,
                               background='#111111',
                               foreground='white',
                               font=('Bebas Neue', 12)
                               )
            textoerro.pack()
            button.pack()
            janelaerro3.mainloop()


        if questao == ultimoitem:
            janelaultima = tk.Tk()
            janelaultima.title('Última questão')
            janelaultima.geometry('1366x768')
            janelaultima.configure(background='#111111')

            frame_3 = tk.Frame(master=janelaultima, highlightbackground='orange', highlightthickness=8, height=385,
                               width=510)
            frame_3.pack()
            frame_3.place(x=428, y=25)
            frame_3_1 = tk.Frame(master=janelaultima, highlightbackground="orange", highlightthickness=8, height=160,
                                 width=260)
            frame_3_1.pack(padx=10, pady=10)
            frame_3_1.place(x=48, y=448)
            frame_3_2 = tk.Frame(master=janelaultima, highlightbackground="orange", highlightthickness=8, height=160,
                                 width=260)
            frame_3_2.pack(padx=10, pady=10)
            frame_3_2.place(x=348, y=448)
            frame_3_3 = tk.Frame(master=janelaultima, highlightbackground="orange", highlightthickness=8, height=160,
                                 width=260)
            frame_3_3.pack(padx=10, pady=10)
            frame_3_3.place(x=764, y=448)
            frame_3_4 = tk.Frame(master=janelaultima, highlightbackground="orange", highlightthickness=8, height=160,
                                 width=260)
            frame_3_4.pack(padx=10, pady=10)
            frame_3_4.place(x=1064, y=448)

            urlimagem_1 = urllib.request.urlopen('https://i.postimg.cc/cCGbmzq6/quest-exer4.png')
            urlalternativa1 = urllib.request.urlopen('https://i.postimg.cc/0jyYGGth/ex4-1-red.png')
            urlalternativa2 = urllib.request.urlopen('https://i.postimg.cc/kGcDMkqb/ex4-2-red.png')
            urlalternativa3 = urllib.request.urlopen('https://i.postimg.cc/TwsC7HZn/ex4-3-red.png')
            urlalternativa4 = urllib.request.urlopen('https://i.postimg.cc/hP2bpYTv/ex4-4-red.png')
            img_1 = ImageTk.PhotoImage(file=urlimagem_1, master=janelaultima)
            imgal1 = ImageTk.PhotoImage(file=urlalternativa1, master=janelaultima)
            imgal2 = ImageTk.PhotoImage(file=urlalternativa2, master=janelaultima)
            imgal3 = ImageTk.PhotoImage(file=urlalternativa3, master=janelaultima)
            imgal4 = ImageTk.PhotoImage(file=urlalternativa4, master=janelaultima)
            imagem_1 = Label(janelaultima, image=img_1)
            imagem_1.pack(pady=28)
            button_1 = tk.Button(janelaultima, image=imgal1, command=perguntaacerto3)
            button_2 = tk.Button(janelaultima, image=imgal2, command=perguntaerrada3)
            button_3 = tk.Button(janelaultima, image=imgal3, command=perguntaerrada3)
            button_4 = tk.Button(janelaultima, image=imgal4, command=perguntaerrada3)
            button_1.pack()
            button_1.place(x=50, y=450)
            button_2.pack()
            button_2.place(x=350, y=450)
            button_3.pack()
            button_3.place(x=766, y=450)
            button_4.pack()
            button_4.place(x=1066, y=450)
            janelaultima.mainloop()

        else:
            janela3 = tk.Tk()
            janela3.title('Pergunta 3')
            janela3.geometry('1366x768')
            janela3.configure(background='#111111')

            frame_3 = tk.Frame(master=janela3, highlightbackground='orange', highlightthickness=8, height=385,
                               width=510)
            frame_3.pack()
            frame_3.place(x=428, y=25)
            frame_3_1 = tk.Frame(master=janela3, highlightbackground="orange", highlightthickness=8, height=160,
                                 width=260)
            frame_3_1.pack(padx=10, pady=10)
            frame_3_1.place(x=48, y=448)
            frame_3_2 = tk.Frame(master=janela3, highlightbackground="orange", highlightthickness=8, height=160,
                                 width=260)
            frame_3_2.pack(padx=10, pady=10)
            frame_3_2.place(x=348, y=448)
            frame_3_3 = tk.Frame(master=janela3, highlightbackground="orange", highlightthickness=8, height=160,
                                 width=260)
            frame_3_3.pack(padx=10, pady=10)
            frame_3_3.place(x=764, y=448)
            frame_3_4 = tk.Frame(master=janela3, highlightbackground="orange", highlightthickness=8, height=160,
                                 width=260)
            frame_3_4.pack(padx=10, pady=10)
            frame_3_4.place(x=1064, y=448)

            urlimagem_1 = urllib.request.urlopen('https://i.postimg.cc/cCGbmzq6/quest-exer4.png')
            urlalternativa1 = urllib.request.urlopen('https://i.postimg.cc/0jyYGGth/ex4-1-red.png')
            urlalternativa2 = urllib.request.urlopen('https://i.postimg.cc/kGcDMkqb/ex4-2-red.png')
            urlalternativa3 = urllib.request.urlopen('https://i.postimg.cc/TwsC7HZn/ex4-3-red.png')
            urlalternativa4 = urllib.request.urlopen('https://i.postimg.cc/hP2bpYTv/ex4-4-red.png')
            img_1 = ImageTk.PhotoImage(file=urlimagem_1, master=janela3)
            imgal1 = ImageTk.PhotoImage(file=urlalternativa1, master=janela3)
            imgal2 = ImageTk.PhotoImage(file=urlalternativa2, master=janela3)
            imgal3 = ImageTk.PhotoImage(file=urlalternativa3, master=janela3)
            imgal4 = ImageTk.PhotoImage(file=urlalternativa4, master=janela3)
            imagem_1 = Label(janela3, image=img_1)
            imagem_1.pack(pady=28)
            button_1 = tk.Button(janela3, image=imgal1, command=perguntaacerto3)
            button_2 = tk.Button(janela3, image=imgal2, command=perguntaerrada3)
            button_3 = tk.Button(janela3, image=imgal3, command=perguntaerrada3)
            button_4 = tk.Button(janela3, image=imgal4, command=perguntaerrada3)
            button_1.pack()
            button_1.place(x=50, y=450)
            button_2.pack()
            button_2.place(x=350, y=450)
            button_3.pack()
            button_3.place(x=766, y=450)
            button_4.pack()
            button_4.place(x=1066, y=450)
            janela3.mainloop()

    if questao == 4:

        def perguntaacerto4():

	        send_command('C')

            jogador.pontos = jogador.pontos + 100
            if questao == ultimoitem:
                janelaultima.destroy()
            elif questao == 4:
                janela4.destroy()


        def correcao():

            janelaerro4.destroy()
            janelacorrecao = tk.Tk()
            janelacorrecao.title('Correção')
            janelacorrecao.geometry('430x600')
            janelacorrecao.configure(background='#111111')
            janelacorrecao.resizable(False, False)
            urlimagemcorrecao = urllib.request.urlopen(
                'https://i.postimg.cc/MKC1wdJm/corre-reflex-o-redimensionada.png')
            imgcorrecao = ImageTk.PhotoImage(file=urlimagemcorrecao, master=janelacorrecao)
            imagemcorrecao = Label(janelacorrecao, image=imgcorrecao)
            imagemcorrecao.pack()
            janelacorrecao.mainloop()


            if questao == ultimoitem:
                janelaultima.destroy()
            elif questao == 4:
                janela4.destroy()


        def perguntaerrada4():
		
	        send_command('W')

            jogador.vidas = jogador.vidas - 1

            if jogador.vidas == 0:
                if questao == ultimoitem:
                    janelaultima.destroy()
                elif questao == 1:
                    janela4.destroy()
                gameover()
            else:
                pass

            if jogador.pontos == 0:
                pass
            else:
                jogador.pontos = jogador.pontos - 100

            if questao == ultimoitem:
                janelaultima.destroy()
            elif questao == 4:
                janela4.destroy()

            global janelaerro4
            janelaerro4 = tk.Tk()
            janelaerro4.title('Você errou!')
            janelaerro4.geometry('200x200')
            janelaerro4.configure(background='#111111')
            textoerro = Label(janelaerro4, text='Sinto muito, você errou!',
                              background='#111111',
                              foreground='white',
                              font=('Bebas Neue', 12)
                              )
            button = tk.Button(janelaerro4, text='Saiba o porquê.', command=correcao,
                               background='#111111',
                               foreground='white',
                               font=('Bebas Neue', 12)
                               )
            textoerro.pack()
            button.pack()
            janelaerro4.mainloop()


        def answer():
            getresposta1 = resposta1.get()
            if getresposta1 == 'Reflexão' or getresposta1 == 'reflexão':
                perguntaacerto4()
            else:
                perguntaerrada4()


        if questao == ultimoitem:
            janelaultima = tk.Tk()
            janelaultima.title('Última questão')
            janelaultima.geometry('1366x768')
            janelaultima.configure(background='#111111')
            urlalternativa_4 = urllib.request.urlopen('https://i.postimg.cc/fbt1gMnf/ex3-un.png')
            imgal1 = ImageTk.PhotoImage(file=urlalternativa_4, master=janelaultima)
            imagemalternativa4 = Button(janelaultima, image=imgal1)
            imagemalternativa4.configure(background='blue', border=3)
            textoquestao4 = Label(janelaultima,
                                  text='Descreva qual transformação geométrica foi realizada para essa figura.',
                                  background='#111111',
                                  foreground='white',
                                  font=('Bebas Neue', 20)
                                  )
            resposta1 = tk.Entry(janelaultima, bd=3)
            buttonenter_1 = tk.Button(janelaultima, text='Verificar',
                                      background='#111111',
                                      foreground='white',
                                      font=('Bebas Neue', 16),
                                      command=answer, bg='blue', bd=5
                                      )
            buttonenter = tk.Button(janelaultima, text='Verificar',
                                    background='#111111',
                                    foreground='white',
                                    font=('Bebas Neue', 16),
                                    command=answer
                                    )
            textoquestao4.pack(pady=10)
            imagemalternativa4.pack()
            resposta1.pack()
            resposta1.place(x=618, y=520)
            buttonenter_1.pack()
            buttonenter_1.place(x=642, y=553)
            buttonenter.pack()
            buttonenter.place(x=644, y=555)
            janelaultima.mainloop()

        else:
            janela4 = tk.Tk()
            janela4.title('Pergunta 4')
            janela4.geometry('1366x768')
            janela4.configure(background='#111111')
            urlalternativa_4 = urllib.request.urlopen('https://i.postimg.cc/fbt1gMnf/ex3-un.png')
            imgal1 = ImageTk.PhotoImage(file=urlalternativa_4, master=janela4)
            imagemalternativa4 = Button(janela4, image=imgal1)
            imagemalternativa4.configure(background='blue', border=3)
            textoquestao4 = Label(janela4,
                                  text='Descreva qual transformação geométrica foi realizada para essa figura.',
                                  background='#111111',
                                  foreground='white',
                                  font=('Bebas Neue', 20)
                                  )
            resposta1 = tk.Entry(janela4, bd=3)
            buttonenter_1 = tk.Button(janela4, text='Verificar',
                                      background='#111111',
                                      foreground='white',
                                      font=('Bebas Neue', 16),
                                      command=answer, bg='blue', bd=5
                                      )
            buttonenter = tk.Button(janela4, text='Verificar',
                                    background='#111111',
                                    foreground='white',
                                    font=('Bebas Neue', 16),
                                    command=answer
                                    )
            textoquestao4.pack(pady=10)
            imagemalternativa4.pack()
            resposta1.pack()
            resposta1.place(x=618, y=520)
            buttonenter_1.pack()
            buttonenter_1.place(x=642, y=553)
            buttonenter.pack()
            buttonenter.place(x=644, y=555)
            janela4.mainloop()
                         
def gabarito():
    janelapergunta.destroy()
    janelagabarito = tk.Tk()
    janelagabarito.geometry('1366x768')
    janelagabarito.title('Gabarito')
    janelagabarito.configure(background='#111111')
    gabar = Label(janelagabarito, text='1) Alternativa correta: D',
                  background='#111111', font=('Bebas Neue', 16),
                  foreground='white')
    gabar.pack(padx=10, pady=10)
    gabar2 = Label(janelagabarito, text='2) Alternativa correta: 4',
                   background='#111111', font=('Bebas Neue', 16),
                   foreground='white')
    gabar2.pack(padx=10, pady=10)
    gabar3 = Label(janelagabarito, text='3) Alternativa correta: 1',
                   background='#111111', font=('Bebas Neue', 16),
                   foreground='white')
    gabar3.pack(padx=10, pady=10)
    gabar4 = Label(janelagabarito, text='4) Texto correto: "Reflexão"',
                   background='#111111', font=('Bebas Neue', 16),
                   foreground='white')
    gabar4.pack(padx=10, pady=10)
    gabar5 = Label(janelagabarito, text='5) Texto correto: "Translação"',
                   background='#111111', font=('Bebas Neue', 16),
                   foreground='white')
    gabar5.pack(padx=10, pady=10)
    gabar6 = Label(janelagabarito, text='6) Texto correto: "Rotação"',
                   background='#111111', font=('Bebas Neue', 16),
                   foreground='white')
    gabar6.pack(padx=10, pady=10)
    gabar7 = Label(janelagabarito, text='7) Alternativa correta: D',
                   background='#111111', font=('Bebas Neue', 16),
                   foreground='white')
    gabar7.pack(padx=10, pady=10)
    gabar8 = Label(janelagabarito, text='8) Alternativa correta: C',
                   background='#111111', font=('Bebas Neue', 16),
                   foreground='white')
    gabar8.pack(padx=10, pady=10)
    gabar9 = Label(janelagabarito, text='9) Alternativa correta: B',
                   background='#111111', font=('Bebas Neue', 16),
                   foreground='white')
    gabar9.pack(padx=10, pady=10)
    gabar10 = Label(janelagabarito, text='10) Alternativa correta: 2',
                    background='#111111', font=('Bebas Neue', 16),
                    foreground='white')
    gabar10.pack(padx=10, pady=10)


def perguntagabarito():
    global janelapergunta
    janelapergunta = tk.Tk()
    janelapergunta.title('Gabarito')
    janelapergunta.geometry('200x200')
    janelapergunta.configure(background='#111111')
    textopergunta = Label(janelapergunta, text='Quer ver o gabarito?',
                          background='#111111',
                          foreground='white',
                          font=('Bebas Neue', 12)
                          )
    buttonsim = tk.Button(janelapergunta, text='SIM',
                          background='#111111',
                          foreground='white',
                          font=('Bebas Neue', 12),
                          command=gabarito)
    buttonnao = tk.Button(janelapergunta, text='NÃO',
                          background='#111111',
                          foreground='white',
                          font=('Bebas Neue', 12),
                          command=janelapergunta.destroy)
    textopergunta.pack()
    buttonsim.pack()
    buttonsim.place(x=50, y=100)
    buttonnao.pack()
    buttonnao.place(x=150, y=100)
    janelapergunta.mainloop()


perguntagabarito()

# Verificando se os dados dos objetos são salvos corretamente!
print("O jogador {} fez {} pontos com {} vida(s)!".format(jogador.nome, jogador.pontos, jogador.vidas))


def saveinfo():
    qsave.destroy()
    with open('playerdata.json', 'r') as file:
        maindata = json.load(file)

    infojogador.update({jogador.nome: ['Pontos: {}, Vidas: {}'.format(jogador.pontos, jogador.vidas)]})
    maindata.update(infojogador)
    with open('playerdata.json', 'w') as file:
        json.dump(maindata, file, indent=1)


def scoreboard():
    def erasetext():
        maintext.delete('1.0', END)

    def alphabeticorder():
        datalist = data.items()
        sorteddatalist = sorted(datalist)
        maintext.tag_configure("center", justify='center')
        for item in sorteddatalist:
            maintext.insert(tk.END, (str(item) + '\n'), "center")
        maintext.pack()

    def highestvalueorder():
        datalist = data.items()
        numbersorteddatalist = sorted(datalist, key=lambda x: x[1], reverse=True)
        maintext.tag_configure("center", justify='center')
        for item in numbersorteddatalist:
            maintext.insert(tk.END, (str(item) + '\n'), "center")
        maintext.pack()

    def lowestvalueorder():
        datalist = data.items()
        numbersorteddatalist = sorted(datalist, key=lambda x: x[1])
        maintext.tag_configure("center", justify='center')
        for item in numbersorteddatalist:
            maintext.insert(tk.END, (str(item) + '\n'), "center")
        maintext.pack()

    qload.destroy()
    with open('playerdata.json', 'r') as file:
        data = json.load(file)

        ## Função utilizada para desligar o teclado enquanto se vê o placar de pontuação,
        ## para evitar fraudes.

        keyboarddisable = pynput.keyboard.Listener(suppress=True)
        keyboarddisable.start()

        scorewindow = tk.Tk()
        scorewindow.geometry('1366x768')
        scorewindow.title('SCOREBOARD')
        scorewindow.configure(background="#111111")
        scrollbar = tk.Scrollbar(scorewindow)
        scrollbar.pack(side=RIGHT, fill=Y)
        maintext = tk.Text(scorewindow, width=1366, height=768, bg="#111111", fg='white', font=('Bebas Neue', 15),
                           yscrollcommand=scrollbar.set)
        maintext.tag_configure("center", justify='center')
        for item in data.items():
            maintext.insert(tk.END, str(item) + '\n', "center")

        alphabeticorderbutton = tk.Button(scorewindow, text='Ordem alfabética', background="#111111",
                                          foreground='white', font=('Bebas Neue', 15),
                                          command=lambda: [erasetext(), alphabeticorder()])
        highestvaluebutton = tk.Button(scorewindow, text='Ordem decrescente', background='#111111',
                                       foreground='white', font=('Bebas Neue', 15),
                                       command=lambda: [erasetext(), highestvalueorder()])
        lowestvaluebutton = tk.Button(scorewindow, text='Ordem crescente', background="#111111",
                                      foreground='white', font=('Bebas Neue', 15),
                                      command=lambda: [erasetext(), lowestvalueorder()])

        maintext.pack()
        alphabeticorderbutton.pack()
        highestvaluebutton.pack()
        lowestvaluebutton.pack()
        alphabeticorderbutton.place(x=1000, y=50)
        highestvaluebutton.place(x=1000, y=100)
        lowestvaluebutton.place(x=1000, y=150)
        scrollbar.config(command=maintext.yview)
        scorewindow.mainloop()


# Janela perguntando se o usuário quer salvar sua pontuação.

qsave = tk.Tk()
qsave.title('Salvar informações')
qsave.geometry('400x300')
qsave.configure(background='#111111')
text = Label(qsave, text='Quer salvar sua pontuação?', background='#111111',
             foreground='white', font=('Bebas Neue', 15))
confirm = tk.Button(qsave, text='Sim', background='#111111', foreground='white',
                    font=('Bebas Neue', 15), command=saveinfo)
decline = tk.Button(qsave, text='Não', background='#111111', foreground='white',
                    font=('Bebas Neue', 15), command=qsave.destroy)
text.pack()
confirm.pack()
decline.pack()
qsave.mainloop()

# Janela perguntando se o usuário quer abrir o placar de pontuação:

qload = tk.Tk()
qload.title('Ver placar de pontuações')
qload.geometry('400x300')
qload.configure(background="#111111")
text = Label(qload, text='Quer ver o placar de pontuação?', background='#111111',
             foreground='white', font=('Bebas Neue', 15))
confirm = tk.Button(qload, text='Sim', background='#111111', foreground='white',
                    font=('Bebas Neue', 15), command=scoreboard)
decline = tk.Button(qload, text='Não', background='#111111', foreground='white',
                    font=('Bebas Neue', 15), command=qload.destroy)
text.pack()
confirm.pack()
decline.pack()
qload.mainloop()

# Última parte do programa:
# Função encerramento: Agradecendo aos participantes do questionário:

janelaagradecimentos = tk.Tk()
janelaagradecimentos.title('Obrigado!')
janelaagradecimentos.geometry('300x300')
janelaagradecimentos.configure(background='#111111')

textoagradecimento = Label(janelaagradecimentos, text='Obrigado por participar deste questionário!',
                           background='#111111',
                           foreground='white',
                           font=('Bebas Neue', 12))
botaoencerramento = tk.Button(janelaagradecimentos, text='Clique para encerrar o questionário!', command=sys.exit,
                              background='#111111',
                              foreground='white',
                              font=('Bebas Neue', 12))
textoagradecimento.pack()
botaoencerramento.pack()
janelaagradecimentos.mainloop()
