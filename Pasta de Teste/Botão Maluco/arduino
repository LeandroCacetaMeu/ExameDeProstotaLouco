
const int buttonPin = 5; // Pino do botão
const int ledPin = 7;   // Pino do LED embutido no Arduino
int buttonState = LOW;   // Variável para armazenar o estado atual do botão
int lastButtonState = LOW; // Variável para armazenar o último estado do botão
unsigned long lastDebounceTime = 0;
unsigned long debounceDelay = 50; // Tempo de debounce em milissegundos

void setup() {
  pinMode(buttonPin, INPUT_PULLUP); // Configurar o pino do botão como entrada com pull-up interno
  pinMode(ledPin, OUTPUT);   // Configurar o pino do LED como saída
  Serial.begin(9600);       // Iniciar a comunicação serial com o computador
}

void loop() {
  int reading = digitalRead(buttonPin); // Ler o estado atual do botão
  
  // Verificar se o estado do botão mudou
  if (reading != lastButtonState) {
    lastDebounceTime = millis();
  }
  
  // Verificar se passou tempo suficiente desde a última mudança para considerar como uma leitura válida
  if ((millis() - lastDebounceTime) > debounceDelay) {
    // Se o estado do botão for diferente do último estado registrado
    if (reading != buttonState) {
      buttonState = reading;
      
      // Verificar se o botão foi pressionado
      if (buttonState == HIGH) {
        // Inverter o estado do LED
        digitalWrite(ledPin, !digitalRead(ledPin));
        Serial.println("Botao Pressionado");
      }
    }
  }
  
  lastButtonState = reading; // Atualizar o último estado do botão
}
